{
  "children": [
    {
      "children": [
        {
          "flags": {},
          "id": 172,
          "kind": 16,
          "kindString": "Enumeration Member",
          "name": "DAY",
          "sources": [
            {
              "character": 2,
              "fileName": "time-util.ts",
              "line": 11,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/time-util.ts#L11"
            }
          ],
          "type": {
            "type": "literal",
            "value": "DAY"
          }
        },
        {
          "flags": {},
          "id": 171,
          "kind": 16,
          "kindString": "Enumeration Member",
          "name": "HOUR",
          "sources": [
            {
              "character": 2,
              "fileName": "time-util.ts",
              "line": 10,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/time-util.ts#L10"
            }
          ],
          "type": {
            "type": "literal",
            "value": "HOUR"
          }
        },
        {
          "flags": {},
          "id": 168,
          "kind": 16,
          "kindString": "Enumeration Member",
          "name": "MILLISECOND",
          "sources": [
            {
              "character": 2,
              "fileName": "time-util.ts",
              "line": 7,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/time-util.ts#L7"
            }
          ],
          "type": {
            "type": "literal",
            "value": "MILLISECOND"
          }
        },
        {
          "flags": {},
          "id": 170,
          "kind": 16,
          "kindString": "Enumeration Member",
          "name": "MINUTE",
          "sources": [
            {
              "character": 2,
              "fileName": "time-util.ts",
              "line": 9,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/time-util.ts#L9"
            }
          ],
          "type": {
            "type": "literal",
            "value": "MINUTE"
          }
        },
        {
          "flags": {},
          "id": 174,
          "kind": 16,
          "kindString": "Enumeration Member",
          "name": "MONTH",
          "sources": [
            {
              "character": 2,
              "fileName": "time-util.ts",
              "line": 13,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/time-util.ts#L13"
            }
          ],
          "type": {
            "type": "literal",
            "value": "MONTH"
          }
        },
        {
          "flags": {},
          "id": 169,
          "kind": 16,
          "kindString": "Enumeration Member",
          "name": "SECOND",
          "sources": [
            {
              "character": 2,
              "fileName": "time-util.ts",
              "line": 8,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/time-util.ts#L8"
            }
          ],
          "type": {
            "type": "literal",
            "value": "SECOND"
          }
        },
        {
          "flags": {},
          "id": 173,
          "kind": 16,
          "kindString": "Enumeration Member",
          "name": "WEEK",
          "sources": [
            {
              "character": 2,
              "fileName": "time-util.ts",
              "line": 12,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/time-util.ts#L12"
            }
          ],
          "type": {
            "type": "literal",
            "value": "WEEK"
          }
        },
        {
          "flags": {},
          "id": 175,
          "kind": 16,
          "kindString": "Enumeration Member",
          "name": "YEAR",
          "sources": [
            {
              "character": 2,
              "fileName": "time-util.ts",
              "line": 14,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/time-util.ts#L14"
            }
          ],
          "type": {
            "type": "literal",
            "value": "YEAR"
          }
        }
      ],
      "flags": {},
      "groups": [
        {
          "children": [
            172,
            171,
            168,
            170,
            174,
            169,
            173,
            175
          ],
          "title": "Enumeration Members"
        }
      ],
      "id": 167,
      "kind": 8,
      "kindString": "Enumeration",
      "name": "DurationUnit",
      "sources": [
        {
          "character": 12,
          "fileName": "time-util.ts",
          "line": 6,
          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/time-util.ts#L6"
        }
      ]
    },
    {
      "children": [
        {
          "flags": {},
          "id": 65,
          "kind": 512,
          "kindString": "Constructor",
          "name": "constructor",
          "overwrites": {
            "name": "Error.constructor",
            "type": "reference"
          },
          "signatures": [
            {
              "flags": {},
              "id": 66,
              "kind": 16384,
              "kindString": "Constructor signature",
              "name": "new ErrorWithPayload",
              "overwrites": {
                "name": "Error.constructor",
                "type": "reference"
              },
              "parameters": [
                {
                  "flags": {},
                  "id": 68,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "message",
                  "type": {
                    "name": "string",
                    "type": "intrinsic"
                  }
                },
                {
                  "flags": {},
                  "id": 69,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "payload",
                  "type": {
                    "id": 67,
                    "name": "T",
                    "type": "reference"
                  }
                }
              ],
              "type": {
                "id": 64,
                "name": "ErrorWithPayload",
                "type": "reference",
                "typeArguments": [
                  {
                    "id": 67,
                    "name": "T",
                    "type": "reference"
                  }
                ]
              },
              "typeParameter": [
                {
                  "flags": {},
                  "id": 67,
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "name": "T"
                }
              ]
            }
          ],
          "sources": [
            {
              "character": 2,
              "fileName": "joi-util.ts",
              "line": 14,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/joi-util.ts#L14"
            }
          ]
        },
        {
          "flags": {},
          "id": 70,
          "kind": 1024,
          "kindString": "Property",
          "name": "payload",
          "sources": [
            {
              "character": 2,
              "fileName": "joi-util.ts",
              "line": 13,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/joi-util.ts#L13"
            }
          ],
          "type": {
            "id": 67,
            "name": "T",
            "type": "reference"
          }
        }
      ],
      "extendedTypes": [
        {
          "name": "Error",
          "package": "typescript",
          "qualifiedName": "Error",
          "type": "reference"
        }
      ],
      "flags": {},
      "groups": [
        {
          "children": [
            65
          ],
          "title": "Constructors"
        },
        {
          "children": [
            70
          ],
          "title": "Properties"
        }
      ],
      "id": 64,
      "kind": 128,
      "kindString": "Class",
      "name": "ErrorWithPayload",
      "sources": [
        {
          "character": 13,
          "fileName": "joi-util.ts",
          "line": 12,
          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/joi-util.ts#L12"
        }
      ],
      "typeParameters": [
        {
          "flags": {},
          "id": 71,
          "kind": 131072,
          "kindString": "Type parameter",
          "name": "T"
        }
      ]
    },
    {
      "children": [
        {
          "flags": {},
          "id": 73,
          "kind": 512,
          "kindString": "Constructor",
          "name": "constructor",
          "signatures": [
            {
              "flags": {},
              "id": 74,
              "kind": 16384,
              "kindString": "Constructor signature",
              "name": "new JoiUtil",
              "type": {
                "id": 72,
                "name": "JoiUtil",
                "type": "reference"
              }
            }
          ]
        },
        {
          "flags": {
            "isProtected": true
          },
          "id": 87,
          "kind": 2048,
          "kindString": "Method",
          "name": "_validate",
          "signatures": [
            {
              "flags": {},
              "id": 88,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "_validate",
              "parameters": [
                {
                  "flags": {},
                  "id": 90,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "objectToValidate",
                  "type": {
                    "name": "any",
                    "type": "intrinsic"
                  }
                },
                {
                  "flags": {},
                  "id": 91,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "schema",
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "name": "Schema",
                        "package": "joi",
                        "qualifiedName": "Joi.Schema",
                        "type": "reference",
                        "typeArguments": [
                          {
                            "name": "any",
                            "type": "intrinsic"
                          }
                        ]
                      },
                      {
                        "name": "ObjectSchema",
                        "package": "joi",
                        "qualifiedName": "Joi.ObjectSchema",
                        "type": "reference",
                        "typeArguments": [
                          {
                            "id": 89,
                            "name": "T",
                            "type": "reference"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "flags": {
                    "isOptional": true
                  },
                  "id": 92,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "options",
                  "type": {
                    "id": 61,
                    "name": "joiUtilOptions",
                    "type": "reference"
                  }
                }
              ],
              "type": {
                "id": 89,
                "name": "T",
                "type": "reference"
              },
              "typeParameter": [
                {
                  "flags": {},
                  "id": 89,
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "name": "T"
                }
              ]
            }
          ],
          "sources": [
            {
              "character": 12,
              "fileName": "joi-util.ts",
              "line": 65,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/joi-util.ts#L65"
            }
          ]
        },
        {
          "flags": {},
          "id": 75,
          "kind": 2048,
          "kindString": "Method",
          "name": "sanitize",
          "signatures": [
            {
              "comment": {
                "blockTags": [
                  {
                    "content": [
                      {
                        "kind": "text",
                        "text": "expected object after validation"
                      }
                    ],
                    "tag": "@returns"
                  }
                ],
                "summary": [
                  {
                    "kind": "text",
                    "text": "Validate and clean object"
                  }
                ]
              },
              "flags": {},
              "id": 76,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "sanitize",
              "parameters": [
                {
                  "flags": {},
                  "id": 78,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "objectToValidate",
                  "type": {
                    "name": "any",
                    "type": "intrinsic"
                  }
                },
                {
                  "flags": {},
                  "id": 79,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "schema",
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "name": "Schema",
                        "package": "joi",
                        "qualifiedName": "Joi.Schema",
                        "type": "reference",
                        "typeArguments": [
                          {
                            "name": "any",
                            "type": "intrinsic"
                          }
                        ]
                      },
                      {
                        "name": "ObjectSchema",
                        "package": "joi",
                        "qualifiedName": "Joi.ObjectSchema",
                        "type": "reference",
                        "typeArguments": [
                          {
                            "id": 77,
                            "name": "T",
                            "type": "reference"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "flags": {
                    "isOptional": true
                  },
                  "id": 80,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "joiUtilOptions",
                  "type": {
                    "id": 61,
                    "name": "joiUtilOptions",
                    "type": "reference"
                  }
                }
              ],
              "type": {
                "id": 77,
                "name": "T",
                "type": "reference"
              },
              "typeParameter": [
                {
                  "flags": {},
                  "id": 77,
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "name": "T"
                }
              ]
            }
          ],
          "sources": [
            {
              "character": 2,
              "fileName": "joi-util.ts",
              "line": 48,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/joi-util.ts#L48"
            }
          ]
        },
        {
          "flags": {},
          "id": 81,
          "kind": 2048,
          "kindString": "Method",
          "name": "validate",
          "signatures": [
            {
              "comment": {
                "blockTags": [
                  {
                    "content": [
                      {
                        "kind": "text",
                        "text": "expected object after validation"
                      }
                    ],
                    "tag": "@returns"
                  }
                ],
                "summary": [
                  {
                    "kind": "text",
                    "text": "Only validate properties specified in validation schema"
                  }
                ]
              },
              "flags": {},
              "id": 82,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "validate",
              "parameters": [
                {
                  "flags": {},
                  "id": 84,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "objectToValidate",
                  "type": {
                    "name": "any",
                    "type": "intrinsic"
                  }
                },
                {
                  "flags": {},
                  "id": 85,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "schema",
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "name": "Schema",
                        "package": "joi",
                        "qualifiedName": "Joi.Schema",
                        "type": "reference",
                        "typeArguments": [
                          {
                            "name": "any",
                            "type": "intrinsic"
                          }
                        ]
                      },
                      {
                        "name": "ObjectSchema",
                        "package": "joi",
                        "qualifiedName": "Joi.ObjectSchema",
                        "type": "reference",
                        "typeArguments": [
                          {
                            "id": 83,
                            "name": "T",
                            "type": "reference"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "flags": {
                    "isOptional": true
                  },
                  "id": 86,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "joiUtilOptions",
                  "type": {
                    "id": 61,
                    "name": "joiUtilOptions",
                    "type": "reference"
                  }
                }
              ],
              "type": {
                "id": 83,
                "name": "T",
                "type": "reference"
              },
              "typeParameter": [
                {
                  "flags": {},
                  "id": 83,
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "name": "T"
                }
              ]
            }
          ],
          "sources": [
            {
              "character": 2,
              "fileName": "joi-util.ts",
              "line": 61,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/joi-util.ts#L61"
            }
          ]
        }
      ],
      "comment": {
        "blockTags": [
          {
            "content": [
              {
                "kind": "code",
                "text": "```ts\ntype SomeType = {\n  a: string\n  b: number\n}\nconst someSchema = Joi.object<SomeType>().keys({\n  a: Joi.string().required(),\n  b: Joi.number().required(),\n}).required()\n\nconst joiUtil = new JoiUtil()\n\n// using\nconst invalidObject = joiUtil.validate({}, someSchema) // validate throws an error\nconst validObject = joiUtil.validate({ a: 'a', b: 1 }, someSchema)\n```"
              }
            ],
            "tag": "@example"
          }
        ],
        "summary": [
          {
            "kind": "text",
            "text": "This is a simple wrapper around Joi validation with two functions exposed validate and sanitize. If object is not valid function throws an error."
          }
        ]
      },
      "flags": {},
      "groups": [
        {
          "children": [
            73
          ],
          "title": "Constructors"
        },
        {
          "children": [
            87,
            75,
            81
          ],
          "title": "Methods"
        }
      ],
      "id": 72,
      "kind": 128,
      "kindString": "Class",
      "name": "JoiUtil",
      "sources": [
        {
          "character": 13,
          "fileName": "joi-util.ts",
          "line": 38,
          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/joi-util.ts#L38"
        }
      ]
    },
    {
      "children": [
        {
          "flags": {},
          "id": 103,
          "kind": 512,
          "kindString": "Constructor",
          "name": "constructor",
          "signatures": [
            {
              "flags": {},
              "id": 104,
              "kind": 16384,
              "kindString": "Constructor signature",
              "name": "new ObjectUtil",
              "type": {
                "id": 102,
                "name": "ObjectUtil",
                "type": "reference"
              }
            }
          ]
        },
        {
          "flags": {},
          "id": 105,
          "kind": 2048,
          "kindString": "Method",
          "name": "deepClone",
          "signatures": [
            {
              "comment": {
                "blockTags": [
                  {
                    "content": [],
                    "tag": "@returns"
                  }
                ],
                "summary": [
                  {
                    "kind": "text",
                    "text": "Deep clone object. Returned object will have no references to the object passed through params"
                  }
                ]
              },
              "flags": {},
              "id": 106,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "deepClone",
              "parameters": [
                {
                  "flags": {},
                  "id": 108,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "objectToClone",
                  "type": {
                    "id": 107,
                    "name": "T",
                    "type": "reference"
                  }
                }
              ],
              "type": {
                "id": 107,
                "name": "T",
                "type": "reference"
              },
              "typeParameter": [
                {
                  "flags": {},
                  "id": 107,
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "name": "T",
                  "type": {
                    "id": 98,
                    "name": "ObjectType",
                    "type": "reference"
                  }
                }
              ]
            }
          ],
          "sources": [
            {
              "character": 2,
              "fileName": "object-util.ts",
              "line": 13,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/object-util.ts#L13"
            }
          ]
        },
        {
          "flags": {},
          "id": 128,
          "kind": 2048,
          "kindString": "Method",
          "name": "deepEqual",
          "signatures": [
            {
              "comment": {
                "blockTags": [
                  {
                    "content": [],
                    "tag": "@returns"
                  }
                ],
                "summary": [
                  {
                    "kind": "text",
                    "text": "We are converting objects to string (or null or undefined) and comparing if the result is equal"
                  }
                ]
              },
              "flags": {},
              "id": 129,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "deepEqual",
              "parameters": [
                {
                  "flags": {},
                  "id": 130,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "a",
                  "type": {
                    "name": "any",
                    "type": "intrinsic"
                  }
                },
                {
                  "flags": {},
                  "id": 131,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "b",
                  "type": {
                    "name": "any",
                    "type": "intrinsic"
                  }
                }
              ],
              "type": {
                "name": "boolean",
                "type": "intrinsic"
              }
            }
          ],
          "sources": [
            {
              "character": 2,
              "fileName": "object-util.ts",
              "line": 83,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/object-util.ts#L83"
            }
          ]
        },
        {
          "flags": {},
          "id": 132,
          "kind": 2048,
          "kindString": "Method",
          "name": "deepNullToUndefined",
          "signatures": [
            {
              "comment": {
                "blockTags": [
                  {
                    "content": [],
                    "tag": "@returns"
                  },
                  {
                    "content": [
                      {
                        "kind": "code",
                        "text": "```ts\nconsole.log(new ObjectUtil().deepNullToUndefined({ a: null, b: { c: null } })) // { a: undefined, b: { c: undefined } }\n```"
                      }
                    ],
                    "tag": "@example"
                  }
                ],
                "summary": [
                  {
                    "kind": "text",
                    "text": "This function is going to convert any null to undefined in the object that is passed to it."
                  }
                ]
              },
              "flags": {},
              "id": 133,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "deepNullToUndefined",
              "parameters": [
                {
                  "flags": {},
                  "id": 135,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "objectWithNulls",
                  "type": {
                    "id": 134,
                    "name": "T",
                    "type": "reference"
                  }
                }
              ],
              "type": {
                "id": 134,
                "name": "T",
                "type": "reference"
              },
              "typeParameter": [
                {
                  "flags": {},
                  "id": 134,
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "name": "T",
                  "type": {
                    "id": 98,
                    "name": "ObjectType",
                    "type": "reference"
                  }
                }
              ]
            }
          ],
          "sources": [
            {
              "character": 2,
              "fileName": "object-util.ts",
              "line": 95,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/object-util.ts#L95"
            }
          ]
        },
        {
          "flags": {},
          "id": 121,
          "kind": 2048,
          "kindString": "Method",
          "name": "deepStringify",
          "signatures": [
            {
              "comment": {
                "blockTags": [
                  {
                    "content": [],
                    "tag": "@returns"
                  },
                  {
                    "content": [
                      {
                        "kind": "text",
                        "text": "console.log(new ObjectUtil().deepStringify(null)) // 'null'\nconsole.log(new ObjectUtil().deepStringify(undefined)) // 'undefined'\nconsole.log(new ObjectUtil().deepStringify({ a: 1 })) // '{\\n\\ta: 1\\n}'\n// "
                      },
                      {
                        "kind": "code",
                        "text": "`{\n//   a:1\n// }`"
                      },
                      {
                        "kind": "text",
                        "text": "\nconsole.log(new ObjectUtil().deepStringify({ b: 1, a: 2 }, {isSorted:true, compact: true})) // { a: 2, b: 1 }"
                      }
                    ],
                    "tag": "@example"
                  }
                ],
                "summary": [
                  {
                    "kind": "text",
                    "text": "This function will do stringify deeper that JSON.stringify."
                  }
                ]
              },
              "flags": {},
              "id": 122,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "deepStringify",
              "parameters": [
                {
                  "flags": {},
                  "id": 123,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "obj",
                  "type": {
                    "name": "any",
                    "type": "intrinsic"
                  }
                },
                {
                  "flags": {
                    "isOptional": true
                  },
                  "id": 124,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "options",
                  "type": {
                    "declaration": {
                      "children": [
                        {
                          "flags": {
                            "isOptional": true
                          },
                          "id": 127,
                          "kind": 1024,
                          "kindString": "Property",
                          "name": "compact",
                          "sources": [
                            {
                              "character": 58,
                              "fileName": "object-util.ts",
                              "line": 64,
                              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/object-util.ts#L64"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "name": "number",
                                "type": "intrinsic"
                              },
                              {
                                "name": "boolean",
                                "type": "intrinsic"
                              }
                            ]
                          }
                        },
                        {
                          "flags": {
                            "isOptional": true
                          },
                          "id": 126,
                          "kind": 1024,
                          "kindString": "Property",
                          "name": "isSorted",
                          "sources": [
                            {
                              "character": 38,
                              "fileName": "object-util.ts",
                              "line": 64,
                              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/object-util.ts#L64"
                            }
                          ],
                          "type": {
                            "name": "boolean",
                            "type": "intrinsic"
                          }
                        }
                      ],
                      "flags": {},
                      "groups": [
                        {
                          "children": [
                            127,
                            126
                          ],
                          "title": "Properties"
                        }
                      ],
                      "id": 125,
                      "kind": 65536,
                      "kindString": "Type literal",
                      "name": "__type",
                      "sources": [
                        {
                          "character": 36,
                          "fileName": "object-util.ts",
                          "line": 64,
                          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/object-util.ts#L64"
                        }
                      ]
                    },
                    "type": "reflection"
                  }
                }
              ],
              "type": {
                "name": "string",
                "type": "intrinsic"
              }
            }
          ],
          "sources": [
            {
              "character": 2,
              "fileName": "object-util.ts",
              "line": 64,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/object-util.ts#L64"
            }
          ]
        },
        {
          "flags": {},
          "id": 109,
          "kind": 2048,
          "kindString": "Method",
          "name": "pickByList",
          "signatures": [
            {
              "comment": {
                "blockTags": [
                  {
                    "content": [],
                    "tag": "@returns"
                  }
                ],
                "summary": [
                  {
                    "kind": "text",
                    "text": "Pick only properties from the property list. It is only allowed to pick properties from the first level"
                  }
                ]
              },
              "flags": {},
              "id": 110,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "pickByList",
              "parameters": [
                {
                  "flags": {},
                  "id": 113,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "obj",
                  "type": {
                    "id": 111,
                    "name": "T",
                    "type": "reference"
                  }
                },
                {
                  "flags": {},
                  "id": 114,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "keyList",
                  "type": {
                    "elementType": {
                      "type": "union",
                      "types": [
                        {
                          "name": "string",
                          "type": "intrinsic"
                        },
                        {
                          "id": 112,
                          "name": "L",
                          "type": "reference"
                        }
                      ]
                    },
                    "type": "array"
                  }
                }
              ],
              "type": {
                "name": "Pick",
                "package": "typescript",
                "qualifiedName": "Pick",
                "type": "reference",
                "typeArguments": [
                  {
                    "id": 111,
                    "name": "T",
                    "type": "reference"
                  },
                  {
                    "id": 112,
                    "name": "L",
                    "type": "reference"
                  }
                ]
              },
              "typeParameter": [
                {
                  "flags": {},
                  "id": 111,
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "name": "T",
                  "type": {
                    "name": "object",
                    "type": "intrinsic"
                  }
                },
                {
                  "flags": {},
                  "id": 112,
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "name": "L",
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "name": "string",
                        "type": "intrinsic"
                      },
                      {
                        "name": "number",
                        "type": "intrinsic"
                      },
                      {
                        "name": "symbol",
                        "type": "intrinsic"
                      }
                    ]
                  }
                }
              ]
            }
          ],
          "sources": [
            {
              "character": 2,
              "fileName": "object-util.ts",
              "line": 25,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/object-util.ts#L25"
            }
          ]
        },
        {
          "flags": {},
          "id": 115,
          "kind": 2048,
          "kindString": "Method",
          "name": "pickByObjectKeys",
          "signatures": [
            {
              "comment": {
                "blockTags": [
                  {
                    "content": [],
                    "tag": "@returns"
                  }
                ],
                "summary": [
                  {
                    "kind": "text",
                    "text": "Pick objects properties using keys from the second object."
                  }
                ]
              },
              "flags": {},
              "id": 116,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "pickByObjectKeys",
              "parameters": [
                {
                  "flags": {},
                  "id": 119,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "obj",
                  "type": {
                    "id": 117,
                    "name": "T",
                    "type": "reference"
                  }
                },
                {
                  "flags": {},
                  "id": 120,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "objWithPickKeys",
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "id": 98,
                        "name": "ObjectType",
                        "type": "reference"
                      },
                      {
                        "name": "Partial",
                        "package": "typescript",
                        "qualifiedName": "Partial",
                        "type": "reference",
                        "typeArguments": [
                          {
                            "id": 117,
                            "name": "T",
                            "type": "reference"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "type": {
                "name": "Pick",
                "package": "typescript",
                "qualifiedName": "Pick",
                "type": "reference",
                "typeArguments": [
                  {
                    "id": 117,
                    "name": "T",
                    "type": "reference"
                  },
                  {
                    "id": 118,
                    "name": "L",
                    "type": "reference"
                  }
                ]
              },
              "typeParameter": [
                {
                  "flags": {},
                  "id": 117,
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "name": "T",
                  "type": {
                    "name": "object",
                    "type": "intrinsic"
                  }
                },
                {
                  "flags": {},
                  "id": 118,
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "name": "L",
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "name": "string",
                        "type": "intrinsic"
                      },
                      {
                        "name": "number",
                        "type": "intrinsic"
                      },
                      {
                        "name": "symbol",
                        "type": "intrinsic"
                      }
                    ]
                  }
                }
              ]
            }
          ],
          "sources": [
            {
              "character": 2,
              "fileName": "object-util.ts",
              "line": 46,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/object-util.ts#L46"
            }
          ]
        }
      ],
      "flags": {},
      "groups": [
        {
          "children": [
            103
          ],
          "title": "Constructors"
        },
        {
          "children": [
            105,
            128,
            132,
            121,
            109,
            115
          ],
          "title": "Methods"
        }
      ],
      "id": 102,
      "kind": 128,
      "kindString": "Class",
      "name": "ObjectUtil",
      "sources": [
        {
          "character": 13,
          "fileName": "object-util.ts",
          "line": 6,
          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/object-util.ts#L6"
        }
      ]
    },
    {
      "children": [
        {
          "flags": {},
          "id": 140,
          "kind": 512,
          "kindString": "Constructor",
          "name": "constructor",
          "signatures": [
            {
              "flags": {},
              "id": 141,
              "kind": 16384,
              "kindString": "Constructor signature",
              "name": "new SingleThresholdPromise",
              "parameters": [
                {
                  "flags": {},
                  "id": 143,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "factoryFn",
                  "type": {
                    "name": "AnyFunctionPromiseNoParams",
                    "type": "reference",
                    "typeArguments": [
                      {
                        "id": 142,
                        "name": "T",
                        "type": "reference"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "id": 139,
                "name": "SingleThresholdPromise",
                "type": "reference",
                "typeArguments": [
                  {
                    "id": 142,
                    "name": "T",
                    "type": "reference"
                  }
                ]
              },
              "typeParameter": [
                {
                  "flags": {},
                  "id": 142,
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "name": "T"
                }
              ]
            }
          ],
          "sources": [
            {
              "character": 2,
              "fileName": "single-threshold-promise.ts",
              "line": 27,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/single-threshold-promise.ts#L27"
            }
          ]
        },
        {
          "defaultValue": "{}",
          "flags": {
            "isProtected": true
          },
          "id": 144,
          "kind": 1024,
          "kindString": "Property",
          "name": "_cache",
          "sources": [
            {
              "character": 12,
              "fileName": "single-threshold-promise.ts",
              "line": 21,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/single-threshold-promise.ts#L21"
            }
          ],
          "type": {
            "declaration": {
              "children": [
                {
                  "flags": {
                    "isOptional": true
                  },
                  "id": 146,
                  "kind": 1024,
                  "kindString": "Property",
                  "name": "promises",
                  "sources": [
                    {
                      "character": 4,
                      "fileName": "single-threshold-promise.ts",
                      "line": 22,
                      "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/single-threshold-promise.ts#L22"
                    }
                  ],
                  "type": {
                    "elementType": {
                      "declaration": {
                        "children": [
                          {
                            "flags": {},
                            "id": 152,
                            "kind": 1024,
                            "kindString": "Property",
                            "name": "reject",
                            "sources": [
                              {
                                "character": 63,
                                "fileName": "single-threshold-promise.ts",
                                "line": 22,
                                "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/single-threshold-promise.ts#L22"
                              }
                            ],
                            "type": {
                              "declaration": {
                                "flags": {},
                                "id": 153,
                                "kind": 65536,
                                "kindString": "Type literal",
                                "name": "__type",
                                "signatures": [
                                  {
                                    "flags": {},
                                    "id": 154,
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "name": "__type",
                                    "parameters": [
                                      {
                                        "flags": {
                                          "isOptional": true
                                        },
                                        "id": 155,
                                        "kind": 32768,
                                        "kindString": "Parameter",
                                        "name": "reason",
                                        "type": {
                                          "name": "any",
                                          "type": "intrinsic"
                                        }
                                      }
                                    ],
                                    "type": {
                                      "name": "void",
                                      "type": "intrinsic"
                                    }
                                  }
                                ],
                                "sources": [
                                  {
                                    "character": 71,
                                    "fileName": "single-threshold-promise.ts",
                                    "line": 22,
                                    "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/single-threshold-promise.ts#L22"
                                  }
                                ]
                              },
                              "type": "reflection"
                            }
                          },
                          {
                            "flags": {},
                            "id": 148,
                            "kind": 1024,
                            "kindString": "Property",
                            "name": "resolve",
                            "sources": [
                              {
                                "character": 17,
                                "fileName": "single-threshold-promise.ts",
                                "line": 22,
                                "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/single-threshold-promise.ts#L22"
                              }
                            ],
                            "type": {
                              "declaration": {
                                "flags": {},
                                "id": 149,
                                "kind": 65536,
                                "kindString": "Type literal",
                                "name": "__type",
                                "signatures": [
                                  {
                                    "flags": {},
                                    "id": 150,
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "name": "__type",
                                    "parameters": [
                                      {
                                        "flags": {},
                                        "id": 151,
                                        "kind": 32768,
                                        "kindString": "Parameter",
                                        "name": "value",
                                        "type": {
                                          "type": "union",
                                          "types": [
                                            {
                                              "id": 142,
                                              "name": "T",
                                              "type": "reference"
                                            },
                                            {
                                              "name": "PromiseLike",
                                              "package": "typescript",
                                              "qualifiedName": "PromiseLike",
                                              "type": "reference",
                                              "typeArguments": [
                                                {
                                                  "id": 142,
                                                  "name": "T",
                                                  "type": "reference"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "type": {
                                      "name": "void",
                                      "type": "intrinsic"
                                    }
                                  }
                                ],
                                "sources": [
                                  {
                                    "character": 26,
                                    "fileName": "single-threshold-promise.ts",
                                    "line": 22,
                                    "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/single-threshold-promise.ts#L22"
                                  }
                                ]
                              },
                              "type": "reflection"
                            }
                          }
                        ],
                        "flags": {},
                        "groups": [
                          {
                            "children": [
                              152,
                              148
                            ],
                            "title": "Properties"
                          }
                        ],
                        "id": 147,
                        "kind": 65536,
                        "kindString": "Type literal",
                        "name": "__type",
                        "sources": [
                          {
                            "character": 15,
                            "fileName": "single-threshold-promise.ts",
                            "line": 22,
                            "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/single-threshold-promise.ts#L22"
                          }
                        ]
                      },
                      "type": "reflection"
                    },
                    "type": "array"
                  }
                }
              ],
              "flags": {},
              "groups": [
                {
                  "children": [
                    146
                  ],
                  "title": "Properties"
                }
              ],
              "id": 145,
              "kind": 65536,
              "kindString": "Type literal",
              "name": "__type",
              "sources": [
                {
                  "character": 20,
                  "fileName": "single-threshold-promise.ts",
                  "line": 21,
                  "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/single-threshold-promise.ts#L21"
                }
              ]
            },
            "type": "reflection"
          }
        },
        {
          "flags": {
            "isProtected": true
          },
          "id": 156,
          "kind": 1024,
          "kindString": "Property",
          "name": "_factoryFn",
          "sources": [
            {
              "character": 12,
              "fileName": "single-threshold-promise.ts",
              "line": 25,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/single-threshold-promise.ts#L25"
            }
          ],
          "type": {
            "name": "AnyFunctionPromiseNoParams",
            "type": "reference",
            "typeArguments": [
              {
                "id": 142,
                "name": "T",
                "type": "reference"
              }
            ]
          }
        },
        {
          "flags": {
            "isProtected": true
          },
          "id": 157,
          "kind": 2048,
          "kindString": "Method",
          "name": "_rejectPromises",
          "signatures": [
            {
              "flags": {},
              "id": 158,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "_rejectPromises",
              "type": {
                "name": "void",
                "type": "intrinsic"
              }
            }
          ],
          "sources": [
            {
              "character": 12,
              "fileName": "single-threshold-promise.ts",
              "line": 31,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/single-threshold-promise.ts#L31"
            }
          ]
        },
        {
          "flags": {},
          "id": 159,
          "kind": 2048,
          "kindString": "Method",
          "name": "promise",
          "signatures": [
            {
              "flags": {},
              "id": 160,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "promise",
              "type": {
                "name": "Promise",
                "package": "typescript",
                "qualifiedName": "Promise",
                "type": "reference",
                "typeArguments": [
                  {
                    "id": 142,
                    "name": "T",
                    "type": "reference"
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "character": 8,
              "fileName": "single-threshold-promise.ts",
              "line": 36,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/single-threshold-promise.ts#L36"
            }
          ]
        }
      ],
      "comment": {
        "blockTags": [
          {
            "content": [
              {
                "kind": "code",
                "text": "```ts\nexport const refreshTokenSingleThreshold = new SingleThresholdPromise(async () => {\n  const oldRefreshToken = await refreshTokenService.get()\n  const { accessToken, refreshToken } = await authService.refreshToken({\n    refreshToken: oldRefreshToken,\n  })\n  return { accessToken, refreshToken }\n})\n\nexport const authService = {\n  refreshToken: async (): Promise<{ accessToken: string; refreshToken:string }> => {\n    return refreshTokenSingleThreshold.promise()\n  }\n}\n```"
              }
            ],
            "tag": "@example"
          }
        ],
        "summary": [
          {
            "kind": "text",
            "text": "SingleThresholdPromise returns a single promise, and subsequent calls made before the promise resolves will return the same promise."
          }
        ]
      },
      "flags": {},
      "groups": [
        {
          "children": [
            140
          ],
          "title": "Constructors"
        },
        {
          "children": [
            144,
            156
          ],
          "title": "Properties"
        },
        {
          "children": [
            157,
            159
          ],
          "title": "Methods"
        }
      ],
      "id": 139,
      "kind": 128,
      "kindString": "Class",
      "name": "SingleThresholdPromise",
      "sources": [
        {
          "character": 13,
          "fileName": "single-threshold-promise.ts",
          "line": 20,
          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/single-threshold-promise.ts#L20"
        }
      ],
      "typeParameters": [
        {
          "flags": {},
          "id": 161,
          "kind": 131072,
          "kindString": "Type parameter",
          "name": "T"
        }
      ]
    },
    {
      "children": [
        {
          "flags": {},
          "id": 7,
          "kind": 512,
          "kindString": "Constructor",
          "name": "constructor",
          "signatures": [
            {
              "flags": {},
              "id": 8,
              "kind": 16384,
              "kindString": "Constructor signature",
              "name": "new SingletonAsync",
              "parameters": [
                {
                  "flags": {},
                  "id": 10,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "factory",
                  "type": {
                    "name": "AnyFunctionPromiseNoParams",
                    "type": "reference",
                    "typeArguments": [
                      {
                        "id": 9,
                        "name": "T",
                        "type": "reference"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "id": 6,
                "name": "SingletonAsync",
                "type": "reference",
                "typeArguments": [
                  {
                    "id": 9,
                    "name": "T",
                    "type": "reference"
                  }
                ]
              },
              "typeParameter": [
                {
                  "flags": {},
                  "id": 9,
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "name": "T"
                }
              ]
            }
          ],
          "sources": [
            {
              "character": 2,
              "fileName": "singleton/async.ts",
              "line": 29,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/singleton/async.ts#L29"
            }
          ]
        },
        {
          "defaultValue": "{}",
          "flags": {
            "isProtected": true
          },
          "id": 11,
          "kind": 1024,
          "kindString": "Property",
          "name": "_cache",
          "sources": [
            {
              "character": 12,
              "fileName": "singleton/async.ts",
              "line": 22,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/singleton/async.ts#L22"
            }
          ],
          "type": {
            "declaration": {
              "children": [
                {
                  "flags": {
                    "isOptional": true
                  },
                  "id": 14,
                  "kind": 1024,
                  "kindString": "Property",
                  "name": "promises",
                  "sources": [
                    {
                      "character": 4,
                      "fileName": "singleton/async.ts",
                      "line": 24,
                      "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/singleton/async.ts#L24"
                    }
                  ],
                  "type": {
                    "elementType": {
                      "declaration": {
                        "children": [
                          {
                            "flags": {},
                            "id": 20,
                            "kind": 1024,
                            "kindString": "Property",
                            "name": "reject",
                            "sources": [
                              {
                                "character": 63,
                                "fileName": "singleton/async.ts",
                                "line": 24,
                                "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/singleton/async.ts#L24"
                              }
                            ],
                            "type": {
                              "declaration": {
                                "flags": {},
                                "id": 21,
                                "kind": 65536,
                                "kindString": "Type literal",
                                "name": "__type",
                                "signatures": [
                                  {
                                    "flags": {},
                                    "id": 22,
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "name": "__type",
                                    "parameters": [
                                      {
                                        "flags": {
                                          "isOptional": true
                                        },
                                        "id": 23,
                                        "kind": 32768,
                                        "kindString": "Parameter",
                                        "name": "reason",
                                        "type": {
                                          "name": "any",
                                          "type": "intrinsic"
                                        }
                                      }
                                    ],
                                    "type": {
                                      "name": "void",
                                      "type": "intrinsic"
                                    }
                                  }
                                ],
                                "sources": [
                                  {
                                    "character": 71,
                                    "fileName": "singleton/async.ts",
                                    "line": 24,
                                    "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/singleton/async.ts#L24"
                                  }
                                ]
                              },
                              "type": "reflection"
                            }
                          },
                          {
                            "flags": {},
                            "id": 16,
                            "kind": 1024,
                            "kindString": "Property",
                            "name": "resolve",
                            "sources": [
                              {
                                "character": 17,
                                "fileName": "singleton/async.ts",
                                "line": 24,
                                "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/singleton/async.ts#L24"
                              }
                            ],
                            "type": {
                              "declaration": {
                                "flags": {},
                                "id": 17,
                                "kind": 65536,
                                "kindString": "Type literal",
                                "name": "__type",
                                "signatures": [
                                  {
                                    "flags": {},
                                    "id": 18,
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "name": "__type",
                                    "parameters": [
                                      {
                                        "flags": {},
                                        "id": 19,
                                        "kind": 32768,
                                        "kindString": "Parameter",
                                        "name": "value",
                                        "type": {
                                          "type": "union",
                                          "types": [
                                            {
                                              "id": 9,
                                              "name": "T",
                                              "type": "reference"
                                            },
                                            {
                                              "name": "PromiseLike",
                                              "package": "typescript",
                                              "qualifiedName": "PromiseLike",
                                              "type": "reference",
                                              "typeArguments": [
                                                {
                                                  "id": 9,
                                                  "name": "T",
                                                  "type": "reference"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "type": {
                                      "name": "void",
                                      "type": "intrinsic"
                                    }
                                  }
                                ],
                                "sources": [
                                  {
                                    "character": 26,
                                    "fileName": "singleton/async.ts",
                                    "line": 24,
                                    "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/singleton/async.ts#L24"
                                  }
                                ]
                              },
                              "type": "reflection"
                            }
                          }
                        ],
                        "flags": {},
                        "groups": [
                          {
                            "children": [
                              20,
                              16
                            ],
                            "title": "Properties"
                          }
                        ],
                        "id": 15,
                        "kind": 65536,
                        "kindString": "Type literal",
                        "name": "__type",
                        "sources": [
                          {
                            "character": 15,
                            "fileName": "singleton/async.ts",
                            "line": 24,
                            "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/singleton/async.ts#L24"
                          }
                        ]
                      },
                      "type": "reflection"
                    },
                    "type": "array"
                  }
                },
                {
                  "flags": {
                    "isOptional": true
                  },
                  "id": 13,
                  "kind": 1024,
                  "kindString": "Property",
                  "name": "singleton",
                  "sources": [
                    {
                      "character": 4,
                      "fileName": "singleton/async.ts",
                      "line": 23,
                      "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/singleton/async.ts#L23"
                    }
                  ],
                  "type": {
                    "id": 9,
                    "name": "T",
                    "type": "reference"
                  }
                }
              ],
              "flags": {},
              "groups": [
                {
                  "children": [
                    14,
                    13
                  ],
                  "title": "Properties"
                }
              ],
              "id": 12,
              "kind": 65536,
              "kindString": "Type literal",
              "name": "__type",
              "sources": [
                {
                  "character": 20,
                  "fileName": "singleton/async.ts",
                  "line": 22,
                  "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/singleton/async.ts#L22"
                }
              ]
            },
            "type": "reflection"
          }
        },
        {
          "flags": {
            "isProtected": true
          },
          "id": 24,
          "kind": 1024,
          "kindString": "Property",
          "name": "_factory",
          "sources": [
            {
              "character": 12,
              "fileName": "singleton/async.ts",
              "line": 27,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/singleton/async.ts#L27"
            }
          ],
          "type": {
            "name": "AnyFunctionPromiseNoParams",
            "type": "reference",
            "typeArguments": [
              {
                "id": 9,
                "name": "T",
                "type": "reference"
              }
            ]
          }
        },
        {
          "flags": {
            "isProtected": true
          },
          "id": 27,
          "kind": 2048,
          "kindString": "Method",
          "name": "_rejectPromises",
          "signatures": [
            {
              "flags": {},
              "id": 28,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "_rejectPromises",
              "parameters": [
                {
                  "flags": {},
                  "id": 29,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "params",
                  "type": {
                    "declaration": {
                      "children": [
                        {
                          "flags": {},
                          "id": 31,
                          "kind": 1024,
                          "kindString": "Property",
                          "name": "error",
                          "sources": [
                            {
                              "character": 38,
                              "fileName": "singleton/async.ts",
                              "line": 41,
                              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/singleton/async.ts#L41"
                            }
                          ],
                          "type": {
                            "name": "Error",
                            "package": "typescript",
                            "qualifiedName": "Error",
                            "type": "reference"
                          }
                        }
                      ],
                      "flags": {},
                      "groups": [
                        {
                          "children": [
                            31
                          ],
                          "title": "Properties"
                        }
                      ],
                      "id": 30,
                      "kind": 65536,
                      "kindString": "Type literal",
                      "name": "__type",
                      "sources": [
                        {
                          "character": 36,
                          "fileName": "singleton/async.ts",
                          "line": 41,
                          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/singleton/async.ts#L41"
                        }
                      ]
                    },
                    "type": "reflection"
                  }
                }
              ],
              "type": {
                "name": "void",
                "type": "intrinsic"
              }
            }
          ],
          "sources": [
            {
              "character": 12,
              "fileName": "singleton/async.ts",
              "line": 41,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/singleton/async.ts#L41"
            }
          ]
        },
        {
          "flags": {},
          "id": 34,
          "kind": 2048,
          "kindString": "Method",
          "name": "cached",
          "signatures": [
            {
              "comment": {
                "blockTags": [
                  {
                    "content": [],
                    "tag": "@returns"
                  }
                ],
                "summary": [
                  {
                    "kind": "text",
                    "text": "Return cached value, if there is no value cached return undefined."
                  }
                ]
              },
              "flags": {},
              "id": 35,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "cached",
              "type": {
                "type": "union",
                "types": [
                  {
                    "name": "undefined",
                    "type": "intrinsic"
                  },
                  {
                    "id": 9,
                    "name": "T",
                    "type": "reference"
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "character": 2,
              "fileName": "singleton/async.ts",
              "line": 79,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/singleton/async.ts#L79"
            }
          ]
        },
        {
          "flags": {},
          "id": 25,
          "kind": 2048,
          "kindString": "Method",
          "name": "cleanCache",
          "signatures": [
            {
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Empty cached value and reject any subscribed promise that is waiting for the initial promise to be resolved."
                  }
                ]
              },
              "flags": {},
              "id": 26,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "cleanCache",
              "type": {
                "name": "void",
                "type": "intrinsic"
              }
            }
          ],
          "sources": [
            {
              "character": 2,
              "fileName": "singleton/async.ts",
              "line": 36,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/singleton/async.ts#L36"
            }
          ]
        },
        {
          "flags": {},
          "id": 32,
          "kind": 2048,
          "kindString": "Method",
          "name": "promise",
          "signatures": [
            {
              "comment": {
                "blockTags": [
                  {
                    "content": [],
                    "tag": "@returns"
                  }
                ],
                "summary": [
                  {
                    "kind": "text",
                    "text": "Return singleton value in a promise. If there is no cached value then try to get it from factory."
                  }
                ]
              },
              "flags": {},
              "id": 33,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "promise",
              "type": {
                "name": "Promise",
                "package": "typescript",
                "qualifiedName": "Promise",
                "type": "reference",
                "typeArguments": [
                  {
                    "id": 9,
                    "name": "T",
                    "type": "reference"
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "character": 8,
              "fileName": "singleton/async.ts",
              "line": 53,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/singleton/async.ts#L53"
            }
          ]
        }
      ],
      "comment": {
        "blockTags": [
          {
            "content": [
              {
                "kind": "code",
                "text": "```ts\nexport const configSingleton = new SingletonAsync(async () => {\n  await timeout(3000)\n  return {\n    env: process.env.NODE_ENV\n  } as const\n})\n\n// using\n// cache value before we call promise\nconsole.log(configSingleton().cache()) // undefined\nconsole.log('NODE_ENV: ', await configSingleton().promise().env) // NODE_ENV: prod\n// cache value after we call promise\nconsole.log(configSingleton().cache()) // { env: 'prod' }\n```"
              }
            ],
            "tag": "@example"
          }
        ],
        "summary": [
          {
            "kind": "text",
            "text": "This is a singleton wrapper that is used to wrap around async function. We have additional functionality to clear the cache\nand reject any subscriptions to initial promise. And we can also check if there is anything i cache"
          }
        ]
      },
      "flags": {},
      "groups": [
        {
          "children": [
            7
          ],
          "title": "Constructors"
        },
        {
          "children": [
            11,
            24
          ],
          "title": "Properties"
        },
        {
          "children": [
            27,
            34,
            25,
            32
          ],
          "title": "Methods"
        }
      ],
      "id": 6,
      "kind": 128,
      "kindString": "Class",
      "name": "SingletonAsync",
      "sources": [
        {
          "character": 13,
          "fileName": "singleton/async.ts",
          "line": 21,
          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/singleton/async.ts#L21"
        }
      ],
      "typeParameters": [
        {
          "flags": {},
          "id": 36,
          "kind": 131072,
          "kindString": "Type parameter",
          "name": "T"
        }
      ]
    },
    {
      "children": [
        {
          "flags": {},
          "id": 178,
          "kind": 512,
          "kindString": "Constructor",
          "name": "constructor",
          "signatures": [
            {
              "flags": {},
              "id": 179,
              "kind": 16384,
              "kindString": "Constructor signature",
              "name": "new TimeUtil",
              "type": {
                "id": 177,
                "name": "TimeUtil",
                "type": "reference"
              }
            }
          ]
        },
        {
          "flags": {},
          "id": 194,
          "kind": 2048,
          "kindString": "Method",
          "name": "addToDate",
          "signatures": [
            {
              "comment": {
                "blockTags": [
                  {
                    "content": [],
                    "tag": "@returns"
                  },
                  {
                    "content": [
                      {
                        "kind": "code",
                        "text": "```ts\n// timeUtil.now().toISOString() === 2023-03-08T19:45:01.991Z\nconst timeUtil = new TimeUtil()\nconsole.log(timeUtil.addToDate({date: timeUtil.now(), unit: 'DAY', value: 1 }).toISOString()) // 2023-03-09T19:45:01.991Z\nconsole.log(timeUtil.addToDate({date: timeUtil.now(), unit: DurationUnit.MONTH, value: -1 }).toISOString()) //2023-02-08T19:45:01.991Z\n```"
                      }
                    ],
                    "tag": "@example"
                  }
                ],
                "summary": [
                  {
                    "kind": "text",
                    "text": "Change the value of date by unit/value pare."
                  }
                ]
              },
              "flags": {},
              "id": 195,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "addToDate",
              "parameters": [
                {
                  "flags": {},
                  "id": 196,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "params",
                  "type": {
                    "declaration": {
                      "children": [
                        {
                          "flags": {},
                          "id": 200,
                          "kind": 1024,
                          "kindString": "Property",
                          "name": "date",
                          "sources": [
                            {
                              "character": 76,
                              "fileName": "time-util.ts",
                              "line": 90,
                              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/time-util.ts#L90"
                            }
                          ],
                          "type": {
                            "name": "Date",
                            "package": "typescript",
                            "qualifiedName": "Date",
                            "type": "reference"
                          }
                        },
                        {
                          "flags": {},
                          "id": 198,
                          "kind": 1024,
                          "kindString": "Property",
                          "name": "unit",
                          "sources": [
                            {
                              "character": 22,
                              "fileName": "time-util.ts",
                              "line": 90,
                              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/time-util.ts#L90"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "id": 167,
                                "name": "DurationUnit",
                                "type": "reference"
                              },
                              {
                                "type": "literal",
                                "value": "MILLISECOND"
                              },
                              {
                                "type": "literal",
                                "value": "SECOND"
                              },
                              {
                                "type": "literal",
                                "value": "MINUTE"
                              },
                              {
                                "type": "literal",
                                "value": "HOUR"
                              },
                              {
                                "type": "literal",
                                "value": "DAY"
                              },
                              {
                                "type": "literal",
                                "value": "WEEK"
                              },
                              {
                                "type": "literal",
                                "value": "MONTH"
                              },
                              {
                                "type": "literal",
                                "value": "YEAR"
                              }
                            ]
                          }
                        },
                        {
                          "flags": {},
                          "id": 199,
                          "kind": 1024,
                          "kindString": "Property",
                          "name": "value",
                          "sources": [
                            {
                              "character": 61,
                              "fileName": "time-util.ts",
                              "line": 90,
                              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/time-util.ts#L90"
                            }
                          ],
                          "type": {
                            "name": "number",
                            "type": "intrinsic"
                          }
                        }
                      ],
                      "flags": {},
                      "groups": [
                        {
                          "children": [
                            200,
                            198,
                            199
                          ],
                          "title": "Properties"
                        }
                      ],
                      "id": 197,
                      "kind": 65536,
                      "kindString": "Type literal",
                      "name": "__type",
                      "sources": [
                        {
                          "character": 20,
                          "fileName": "time-util.ts",
                          "line": 90,
                          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/time-util.ts#L90"
                        }
                      ]
                    },
                    "type": "reflection"
                  }
                }
              ],
              "type": {
                "name": "Date",
                "package": "typescript",
                "qualifiedName": "Date",
                "type": "reference"
              }
            }
          ],
          "sources": [
            {
              "character": 2,
              "fileName": "time-util.ts",
              "line": 90,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/time-util.ts#L90"
            }
          ]
        },
        {
          "flags": {},
          "id": 182,
          "kind": 2048,
          "kindString": "Method",
          "name": "dateToUnix",
          "signatures": [
            {
              "comment": {
                "blockTags": [
                  {
                    "content": [],
                    "tag": "@returns"
                  },
                  {
                    "content": [
                      {
                        "kind": "code",
                        "text": "```ts\n// timeUtil.now().toISOString() === 2023-03-08T19:45:01.991Z\nconst timeUtil = new TimeUtil()\nconsole.log(timeUtil.dateToUnix(timeUtil.now())) // 1678304701991\n```"
                      }
                    ],
                    "tag": "@example"
                  }
                ],
                "summary": [
                  {
                    "kind": "text",
                    "text": "Convert date object to unix timestamp (milliseconds)"
                  }
                ]
              },
              "flags": {},
              "id": 183,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "dateToUnix",
              "parameters": [
                {
                  "flags": {},
                  "id": 184,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "date",
                  "type": {
                    "name": "Date",
                    "package": "typescript",
                    "qualifiedName": "Date",
                    "type": "reference"
                  }
                }
              ],
              "type": {
                "name": "number",
                "type": "intrinsic"
              }
            }
          ],
          "sources": [
            {
              "character": 2,
              "fileName": "time-util.ts",
              "line": 39,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/time-util.ts#L39"
            }
          ]
        },
        {
          "flags": {},
          "id": 185,
          "kind": 2048,
          "kindString": "Method",
          "name": "dateToUnixSec",
          "signatures": [
            {
              "comment": {
                "blockTags": [
                  {
                    "content": [],
                    "tag": "@returns"
                  },
                  {
                    "content": [
                      {
                        "kind": "code",
                        "text": "```ts\n// timeUtil.now().toISOString() === 2023-03-08T19:45:01.991Z\nconst timeUtil = new TimeUtil()\nconsole.log(timeUtil.dateToUnix(timeUtil.now())) // 1678304701\n```"
                      }
                    ],
                    "tag": "@example"
                  }
                ],
                "summary": [
                  {
                    "kind": "text",
                    "text": "Convert date object to unix timestamp (seconds)"
                  }
                ]
              },
              "flags": {},
              "id": 186,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "dateToUnixSec",
              "parameters": [
                {
                  "flags": {},
                  "id": 187,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "date",
                  "type": {
                    "name": "Date",
                    "package": "typescript",
                    "qualifiedName": "Date",
                    "type": "reference"
                  }
                }
              ],
              "type": {
                "name": "number",
                "type": "intrinsic"
              }
            }
          ],
          "sources": [
            {
              "character": 2,
              "fileName": "time-util.ts",
              "line": 52,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/time-util.ts#L52"
            }
          ]
        },
        {
          "flags": {},
          "id": 180,
          "kind": 2048,
          "kindString": "Method",
          "name": "now",
          "signatures": [
            {
              "comment": {
                "blockTags": [
                  {
                    "content": [],
                    "tag": "@returns"
                  },
                  {
                    "content": [
                      {
                        "kind": "code",
                        "text": "```ts\nconsole.log(new TimeUtil().now().toISOString()) // 2023-03-08T19:45:01.991Z\n```"
                      }
                    ],
                    "tag": "@example"
                  }
                ],
                "summary": [
                  {
                    "kind": "text",
                    "text": "return date object with the current time"
                  }
                ]
              },
              "flags": {},
              "id": 181,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "now",
              "type": {
                "name": "Date",
                "package": "typescript",
                "qualifiedName": "Date",
                "type": "reference"
              }
            }
          ],
          "sources": [
            {
              "character": 2,
              "fileName": "time-util.ts",
              "line": 26,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/time-util.ts#L26"
            }
          ]
        },
        {
          "flags": {},
          "id": 191,
          "kind": 2048,
          "kindString": "Method",
          "name": "unixSecToDate",
          "signatures": [
            {
              "comment": {
                "blockTags": [
                  {
                    "content": [],
                    "tag": "@returns"
                  },
                  {
                    "content": [
                      {
                        "kind": "code",
                        "text": "```ts\nconst timeUtil = new TimeUtil()\nconsole.log(timeUtil.unixToDate(1678304701).toISOString()) // 2023-03-08T19:45:01.000Z\n```"
                      }
                    ],
                    "tag": "@example"
                  }
                ],
                "summary": [
                  {
                    "kind": "text",
                    "text": "Convert unix timestamp (seconds) to date object"
                  }
                ]
              },
              "flags": {},
              "id": 192,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "unixSecToDate",
              "parameters": [
                {
                  "flags": {},
                  "id": 193,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "unix",
                  "type": {
                    "name": "number",
                    "type": "intrinsic"
                  }
                }
              ],
              "type": {
                "name": "Date",
                "package": "typescript",
                "qualifiedName": "Date",
                "type": "reference"
              }
            }
          ],
          "sources": [
            {
              "character": 2,
              "fileName": "time-util.ts",
              "line": 76,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/time-util.ts#L76"
            }
          ]
        },
        {
          "flags": {},
          "id": 188,
          "kind": 2048,
          "kindString": "Method",
          "name": "unixToDate",
          "signatures": [
            {
              "comment": {
                "blockTags": [
                  {
                    "content": [],
                    "tag": "@returns"
                  },
                  {
                    "content": [
                      {
                        "kind": "code",
                        "text": "```ts\nconst timeUtil = new TimeUtil()\nconsole.log(timeUtil.unixToDate(1678304701991).toISOString()) // 2023-03-08T19:45:01.991Z\n```"
                      }
                    ],
                    "tag": "@example"
                  }
                ],
                "summary": [
                  {
                    "kind": "text",
                    "text": "Convert unix timestamp (milliseconds) to date object"
                  }
                ]
              },
              "flags": {},
              "id": 189,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "unixToDate",
              "parameters": [
                {
                  "flags": {},
                  "id": 190,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "unix",
                  "type": {
                    "name": "number",
                    "type": "intrinsic"
                  }
                }
              ],
              "type": {
                "name": "Date",
                "package": "typescript",
                "qualifiedName": "Date",
                "type": "reference"
              }
            }
          ],
          "sources": [
            {
              "character": 2,
              "fileName": "time-util.ts",
              "line": 64,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/time-util.ts#L64"
            }
          ]
        }
      ],
      "flags": {},
      "groups": [
        {
          "children": [
            178
          ],
          "title": "Constructors"
        },
        {
          "children": [
            194,
            182,
            185,
            180,
            191,
            188
          ],
          "title": "Methods"
        }
      ],
      "id": 177,
      "kind": 128,
      "kindString": "Class",
      "name": "TimeUtil",
      "sources": [
        {
          "character": 13,
          "fileName": "time-util.ts",
          "line": 19,
          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/time-util.ts#L19"
        }
      ]
    },
    {
      "children": [
        {
          "flags": {},
          "id": 57,
          "kind": 2048,
          "kindString": "Method",
          "name": "warn",
          "signatures": [
            {
              "flags": {},
              "id": 58,
              "kind": 4096,
              "kindString": "Call signature",
              "name": "warn",
              "parameters": [
                {
                  "flags": {},
                  "id": 59,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "msg",
                  "type": {
                    "name": "string",
                    "type": "intrinsic"
                  }
                },
                {
                  "flags": {},
                  "id": 60,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "obj",
                  "type": {
                    "id": 98,
                    "name": "ObjectType",
                    "type": "reference"
                  }
                }
              ],
              "type": {
                "name": "void",
                "type": "intrinsic"
              }
            }
          ],
          "sources": [
            {
              "character": 2,
              "fileName": "joi-util.ts",
              "line": 5,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/joi-util.ts#L5"
            }
          ]
        }
      ],
      "flags": {},
      "groups": [
        {
          "children": [
            57
          ],
          "title": "Methods"
        }
      ],
      "id": 56,
      "kind": 256,
      "kindString": "Interface",
      "name": "JoiLogger",
      "sources": [
        {
          "character": 17,
          "fileName": "joi-util.ts",
          "line": 4,
          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/joi-util.ts#L4"
        }
      ]
    },
    {
      "flags": {},
      "id": 41,
      "kind": 4194304,
      "kindString": "Type alias",
      "name": "ClassType",
      "sources": [
        {
          "character": 12,
          "fileName": "class-factory-pattern.ts",
          "line": 1,
          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/class-factory-pattern.ts#L1"
        }
      ],
      "type": {
        "declaration": {
          "flags": {},
          "id": 42,
          "kind": 512,
          "kindString": "Constructor",
          "name": "__type",
          "signatures": [
            {
              "flags": {},
              "id": 43,
              "kind": 16384,
              "kindString": "Constructor signature",
              "name": "__type",
              "parameters": [
                {
                  "flags": {
                    "isRest": true
                  },
                  "id": 44,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "args",
                  "type": {
                    "checkType": {
                      "id": 48,
                      "name": "T",
                      "type": "reference"
                    },
                    "extendsType": {
                      "declaration": {
                        "flags": {},
                        "id": 45,
                        "kind": 65536,
                        "kindString": "Type literal",
                        "name": "__type",
                        "signatures": [
                          {
                            "flags": {},
                            "id": 46,
                            "kind": 16384,
                            "kindString": "Constructor signature",
                            "name": "new args",
                            "parameters": [
                              {
                                "flags": {
                                  "isRest": true
                                },
                                "id": 47,
                                "kind": 32768,
                                "kindString": "Parameter",
                                "name": "args",
                                "type": {
                                  "name": "P",
                                  "type": "reference"
                                }
                              }
                            ],
                            "type": {
                              "name": "any",
                              "type": "intrinsic"
                            }
                          }
                        ],
                        "sources": [
                          {
                            "character": 60,
                            "fileName": "class-factory-pattern.ts",
                            "line": 1,
                            "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/class-factory-pattern.ts#L1"
                          }
                        ]
                      },
                      "type": "reflection"
                    },
                    "falseType": {
                      "elementType": {
                        "name": "never",
                        "type": "intrinsic"
                      },
                      "type": "array"
                    },
                    "trueType": {
                      "name": "P",
                      "type": "reference"
                    },
                    "type": "conditional"
                  }
                }
              ],
              "type": {
                "id": 48,
                "name": "T",
                "type": "reference"
              }
            }
          ],
          "sources": [
            {
              "character": 36,
              "fileName": "class-factory-pattern.ts",
              "line": 1,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/class-factory-pattern.ts#L1"
            }
          ]
        },
        "type": "reflection"
      },
      "typeParameters": [
        {
          "default": {
            "name": "object",
            "type": "intrinsic"
          },
          "flags": {},
          "id": 48,
          "kind": 131072,
          "kindString": "Type parameter",
          "name": "T"
        }
      ]
    },
    {
      "flags": {},
      "id": 176,
      "kind": 4194304,
      "kindString": "Type alias",
      "name": "DurationUnitType",
      "sources": [
        {
          "character": 12,
          "fileName": "time-util.ts",
          "line": 17,
          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/time-util.ts#L17"
        }
      ],
      "type": {
        "head": "",
        "tail": [
          [
            {
              "id": 167,
              "name": "DurationUnit",
              "type": "reference"
            },
            ""
          ]
        ],
        "type": "template-literal"
      }
    },
    {
      "flags": {},
      "id": 98,
      "kind": 4194304,
      "kindString": "Type alias",
      "name": "ObjectType",
      "sources": [
        {
          "character": 12,
          "fileName": "object-util.ts",
          "line": 4,
          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/object-util.ts#L4"
        }
      ],
      "type": {
        "declaration": {
          "flags": {},
          "id": 99,
          "indexSignature": {
            "flags": {},
            "id": 100,
            "kind": 8192,
            "kindString": "Index signature",
            "name": "__index",
            "parameters": [
              {
                "flags": {},
                "id": 101,
                "kind": 32768,
                "name": "k",
                "type": {
                  "name": "string",
                  "type": "intrinsic"
                }
              }
            ],
            "type": {
              "name": "any",
              "type": "intrinsic"
            }
          },
          "kind": 65536,
          "kindString": "Type literal",
          "name": "__type",
          "sources": [
            {
              "character": 25,
              "fileName": "object-util.ts",
              "line": 4,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/object-util.ts#L4"
            }
          ]
        },
        "type": "reflection"
      }
    },
    {
      "flags": {},
      "id": 61,
      "kind": 4194304,
      "kindString": "Type alias",
      "name": "joiUtilOptions",
      "sources": [
        {
          "character": 12,
          "fileName": "joi-util.ts",
          "line": 8,
          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/joi-util.ts#L8"
        }
      ],
      "type": {
        "type": "intersection",
        "types": [
          {
            "name": "ValidationOptions",
            "package": "joi",
            "qualifiedName": "Joi.ValidationOptions",
            "type": "reference"
          },
          {
            "declaration": {
              "children": [
                {
                  "flags": {
                    "isOptional": true
                  },
                  "id": 63,
                  "kind": 1024,
                  "kindString": "Property",
                  "name": "logger",
                  "sources": [
                    {
                      "character": 2,
                      "fileName": "joi-util.ts",
                      "line": 9,
                      "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/joi-util.ts#L9"
                    }
                  ],
                  "type": {
                    "id": 56,
                    "name": "JoiLogger",
                    "type": "reference"
                  }
                }
              ],
              "flags": {},
              "groups": [
                {
                  "children": [
                    63
                  ],
                  "title": "Properties"
                }
              ],
              "id": 62,
              "kind": 65536,
              "kindString": "Type literal",
              "name": "__type",
              "sources": [
                {
                  "character": 49,
                  "fileName": "joi-util.ts",
                  "line": 8,
                  "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/joi-util.ts#L8"
                }
              ]
            },
            "type": "reflection"
          }
        ]
      }
    },
    {
      "defaultValue": "...",
      "flags": {
        "isConst": true
      },
      "id": 136,
      "kind": 32,
      "kindString": "Variable",
      "name": "regexUtil",
      "sources": [
        {
          "character": 13,
          "fileName": "regex-util.ts",
          "line": 1,
          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/regex-util.ts#L1"
        }
      ],
      "type": {
        "declaration": {
          "children": [
            {
              "comment": {
                "blockTags": [
                  {
                    "content": [],
                    "tag": "@returns"
                  },
                  {
                    "content": [
                      {
                        "kind": "text",
                        "text": "const { uuid } = regexUtil\nrouter.route("
                      },
                      {
                        "kind": "code",
                        "text": "`/users/:userId(${uuid})`"
                      },
                      {
                        "kind": "text",
                        "text": ").get(getUsersById)\n//..."
                      }
                    ],
                    "tag": "@example"
                  }
                ],
                "summary": [
                  {
                    "kind": "text",
                    "text": "This is a UUID regex expression. This is usually used in express router to constrict the values passed as a path parameter (if you are using UUID as your identifier)."
                  }
                ]
              },
              "defaultValue": "...",
              "flags": {},
              "id": 138,
              "kind": 1024,
              "kindString": "Property",
              "name": "uuid",
              "sources": [
                {
                  "character": 2,
                  "fileName": "regex-util.ts",
                  "line": 10,
                  "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/regex-util.ts#L10"
                }
              ],
              "type": {
                "type": "literal",
                "value": "\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b"
              }
            }
          ],
          "flags": {},
          "groups": [
            {
              "children": [
                138
              ],
              "title": "Properties"
            }
          ],
          "id": 137,
          "kind": 65536,
          "kindString": "Type literal",
          "name": "__type",
          "sources": [
            {
              "character": 25,
              "fileName": "regex-util.ts",
              "line": 1,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/regex-util.ts#L1"
            }
          ]
        },
        "type": "reflection"
      }
    },
    {
      "defaultValue": "...",
      "flags": {
        "isConst": true
      },
      "id": 162,
      "kind": 32,
      "kindString": "Variable",
      "name": "stringUtil",
      "sources": [
        {
          "character": 13,
          "fileName": "string-util.ts",
          "line": 1,
          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/string-util.ts#L1"
        }
      ],
      "type": {
        "declaration": {
          "children": [
            {
              "defaultValue": "...",
              "flags": {},
              "id": 164,
              "kind": 1024,
              "kindString": "Property",
              "name": "generateUUID",
              "sources": [
                {
                  "character": 2,
                  "fileName": "string-util.ts",
                  "line": 8,
                  "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/string-util.ts#L8"
                }
              ],
              "type": {
                "declaration": {
                  "flags": {},
                  "id": 165,
                  "kind": 65536,
                  "kindString": "Type literal",
                  "name": "__type",
                  "signatures": [
                    {
                      "comment": {
                        "blockTags": [
                          {
                            "content": [],
                            "tag": "@returns"
                          },
                          {
                            "content": [
                              {
                                "kind": "code",
                                "text": "```ts\nconsole.log(stringUtil.uuid()) // \"69bfda25-df3f-46b4-8bbb-955cf5193426\"\n```"
                              }
                            ],
                            "tag": "@example"
                          }
                        ],
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Generate random UUID"
                          }
                        ]
                      },
                      "flags": {},
                      "id": 166,
                      "kind": 4096,
                      "kindString": "Call signature",
                      "name": "__type",
                      "type": {
                        "name": "string",
                        "type": "intrinsic"
                      }
                    }
                  ],
                  "sources": [
                    {
                      "character": 16,
                      "fileName": "string-util.ts",
                      "line": 8,
                      "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/string-util.ts#L8"
                    }
                  ]
                },
                "type": "reflection"
              }
            }
          ],
          "flags": {},
          "groups": [
            {
              "children": [
                164
              ],
              "title": "Properties"
            }
          ],
          "id": 163,
          "kind": 65536,
          "kindString": "Type literal",
          "name": "__type",
          "sources": [
            {
              "character": 26,
              "fileName": "string-util.ts",
              "line": 1,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/string-util.ts#L1"
            }
          ]
        },
        "type": "reflection"
      }
    },
    {
      "defaultValue": "...",
      "flags": {
        "isConst": true
      },
      "id": 204,
      "kind": 32,
      "kindString": "Variable",
      "name": "typeUtil",
      "sources": [
        {
          "character": 13,
          "fileName": "type-util.ts",
          "line": 1,
          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/type-util.ts#L1"
        }
      ],
      "type": {
        "declaration": {
          "children": [
            {
              "defaultValue": "...",
              "flags": {},
              "id": 211,
              "kind": 1024,
              "kindString": "Property",
              "name": "exhaustiveError",
              "sources": [
                {
                  "character": 2,
                  "fileName": "type-util.ts",
                  "line": 51,
                  "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/type-util.ts#L51"
                }
              ],
              "type": {
                "declaration": {
                  "flags": {},
                  "id": 212,
                  "kind": 65536,
                  "kindString": "Type literal",
                  "name": "__type",
                  "signatures": [
                    {
                      "comment": {
                        "blockTags": [
                          {
                            "content": [],
                            "tag": "@returns"
                          },
                          {
                            "content": [
                              {
                                "kind": "code",
                                "text": "```ts\nexport type Animal = 'cat' | 'dog' | 'bird';\n\nexport const makeSound = (animal: Animal): string => {\n  switch (animal) {\n    case 'cat':\n      return 'Meow'\n    case 'dog':\n      return 'Woof'\n    case 'bird':\n      return 'Tweet'\n    default:\n      throw typeUtil.exhaustiveError('Unknown animal [animal]', animal)\n  }\n}\n```"
                              }
                            ],
                            "tag": "@example"
                          }
                        ],
                        "summary": [
                          {
                            "kind": "text",
                            "text": "This is the similar to exhaustiveMessage, but instead of message we are returning error so we can throw it"
                          }
                        ]
                      },
                      "flags": {},
                      "id": 213,
                      "kind": 4096,
                      "kindString": "Call signature",
                      "name": "__type",
                      "parameters": [
                        {
                          "flags": {},
                          "id": 214,
                          "kind": 32768,
                          "kindString": "Parameter",
                          "name": "message",
                          "type": {
                            "name": "string",
                            "type": "intrinsic"
                          }
                        },
                        {
                          "flags": {},
                          "id": 215,
                          "kind": 32768,
                          "kindString": "Parameter",
                          "name": "_",
                          "type": {
                            "name": "never",
                            "type": "intrinsic"
                          }
                        }
                      ],
                      "type": {
                        "name": "Error",
                        "package": "typescript",
                        "qualifiedName": "Error",
                        "type": "reference"
                      }
                    }
                  ],
                  "sources": [
                    {
                      "character": 19,
                      "fileName": "type-util.ts",
                      "line": 51,
                      "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/type-util.ts#L51"
                    }
                  ]
                },
                "type": "reflection"
              }
            },
            {
              "defaultValue": "...",
              "flags": {},
              "id": 206,
              "kind": 1024,
              "kindString": "Property",
              "name": "exhaustiveMessage",
              "sources": [
                {
                  "character": 2,
                  "fileName": "type-util.ts",
                  "line": 26,
                  "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/type-util.ts#L26"
                }
              ],
              "type": {
                "declaration": {
                  "flags": {},
                  "id": 207,
                  "kind": 65536,
                  "kindString": "Type literal",
                  "name": "__type",
                  "signatures": [
                    {
                      "comment": {
                        "blockTags": [
                          {
                            "content": [],
                            "tag": "@returns"
                          },
                          {
                            "content": [
                              {
                                "kind": "code",
                                "text": "```ts\nexport type Animal = 'cat' | 'dog' | 'bird';\n\nexport const makeSound = (animal: Animal): string => {\n  switch (animal) {\n    case 'cat':\n      return 'Meow'\n    case 'dog':\n      return 'Woof'\n    case 'bird':\n      return 'Tweet'\n    default:\n      console.error(new TypeUtil().exhaustiveMessage('Unknown animal [animal]', animal))\n      return 'unknown sound'\n  }\n}\n```"
                              }
                            ],
                            "tag": "@example"
                          }
                        ],
                        "summary": [
                          {
                            "kind": "text",
                            "text": "In TypeScript, exhaustiveMessage is a technique that can be used with switch statements to ensure that all possible cases are handled.\n\nWhen using switch statements, it is common to have a default case that handles any unanticipated cases. However, sometimes it is important to ensure that all cases are explicitly handled to avoid potential errors or bugs in the code."
                          }
                        ]
                      },
                      "flags": {},
                      "id": 208,
                      "kind": 4096,
                      "kindString": "Call signature",
                      "name": "__type",
                      "parameters": [
                        {
                          "flags": {},
                          "id": 209,
                          "kind": 32768,
                          "kindString": "Parameter",
                          "name": "message",
                          "type": {
                            "name": "string",
                            "type": "intrinsic"
                          }
                        },
                        {
                          "flags": {},
                          "id": 210,
                          "kind": 32768,
                          "kindString": "Parameter",
                          "name": "_",
                          "type": {
                            "name": "never",
                            "type": "intrinsic"
                          }
                        }
                      ],
                      "type": {
                        "name": "string",
                        "type": "intrinsic"
                      }
                    }
                  ],
                  "sources": [
                    {
                      "character": 21,
                      "fileName": "type-util.ts",
                      "line": 26,
                      "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/type-util.ts#L26"
                    }
                  ]
                },
                "type": "reflection"
              }
            }
          ],
          "flags": {},
          "groups": [
            {
              "children": [
                211,
                206
              ],
              "title": "Properties"
            }
          ],
          "id": 205,
          "kind": 65536,
          "kindString": "Type literal",
          "name": "__type",
          "sources": [
            {
              "character": 24,
              "fileName": "type-util.ts",
              "line": 1,
              "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/type-util.ts#L1"
            }
          ]
        },
        "type": "reflection"
      }
    },
    {
      "flags": {},
      "id": 49,
      "kind": 64,
      "kindString": "Function",
      "name": "classFactoryPattern",
      "signatures": [
        {
          "comment": {
            "blockTags": [
              {
                "content": [],
                "tag": "@returns"
              },
              {
                "content": [
                  {
                    "kind": "code",
                    "text": "```ts\nexport class SomeClass {\n  protected _a: string\n\n  constructor(params: { a: string }) {\n    const { a } = params\n    this._a = a\n  }\n}\n\nexport const someClassFactory = classFactoryPattern(SomeClass)\n\n// using\nconst someClassInstance = someClassFactory({ a: 'test' })\n```"
                  }
                ],
                "tag": "@example"
              }
            ],
            "summary": [
              {
                "kind": "text",
                "text": "This is a wrapper that easily converts class constructor call ("
              },
              {
                "kind": "code",
                "text": "`new className(..constructorParams)`"
              },
              {
                "kind": "text",
                "text": ") into function call ("
              },
              {
                "kind": "code",
                "text": "`classNameFactory(..constructorParams)`"
              },
              {
                "kind": "text",
                "text": ")"
              }
            ]
          },
          "flags": {},
          "id": 50,
          "kind": 4096,
          "kindString": "Call signature",
          "name": "classFactoryPattern",
          "parameters": [
            {
              "flags": {},
              "id": 52,
              "kind": 32768,
              "kindString": "Parameter",
              "name": "classType",
              "type": {
                "id": 51,
                "name": "C",
                "type": "reference"
              }
            }
          ],
          "type": {
            "declaration": {
              "flags": {},
              "id": 53,
              "kind": 65536,
              "kindString": "Type literal",
              "name": "__type",
              "signatures": [
                {
                  "flags": {},
                  "id": 54,
                  "kind": 4096,
                  "kindString": "Call signature",
                  "name": "__type",
                  "parameters": [
                    {
                      "flags": {
                        "isRest": true
                      },
                      "id": 55,
                      "kind": 32768,
                      "kindString": "Parameter",
                      "name": "args",
                      "type": {
                        "name": "ConstructorParameters",
                        "package": "typescript",
                        "qualifiedName": "ConstructorParameters",
                        "type": "reference",
                        "typeArguments": [
                          {
                            "id": 51,
                            "name": "C",
                            "type": "reference"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "name": "InstanceType",
                    "package": "typescript",
                    "qualifiedName": "InstanceType",
                    "type": "reference",
                    "typeArguments": [
                      {
                        "id": 51,
                        "name": "C",
                        "type": "reference"
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "character": 4,
                  "fileName": "class-factory-pattern.ts",
                  "line": 25,
                  "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/class-factory-pattern.ts#L25"
                }
              ]
            },
            "type": "reflection"
          },
          "typeParameter": [
            {
              "flags": {},
              "id": 51,
              "kind": 131072,
              "kindString": "Type parameter",
              "name": "C",
              "type": {
                "id": 41,
                "name": "ClassType",
                "type": "reference",
                "typeArguments": [
                  {
                    "name": "object",
                    "type": "intrinsic"
                  }
                ]
              }
            }
          ]
        }
      ],
      "sources": [
        {
          "character": 13,
          "fileName": "class-factory-pattern.ts",
          "line": 23,
          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/class-factory-pattern.ts#L23"
        }
      ]
    },
    {
      "flags": {},
      "id": 1,
      "kind": 64,
      "kindString": "Function",
      "name": "expressErrorHandler",
      "signatures": [
        {
          "comment": {
            "blockTags": [
              {
                "content": [
                  {
                    "kind": "code",
                    "text": "```ts\nexport class RootController {\n /@expressErrorHandler\n  async login(req: Request, res: Response): Promise<void> {\n    const { username, password } = validationUtil().sanitize(req.body, postLoginBodySchema)\n    const result = await authorizationUseCase.login({ username, password })\n    res.json(result)\n  }\n}\n```"
                  }
                ],
                "tag": "@example"
              }
            ],
            "summary": [
              {
                "kind": "text",
                "text": "Wrap async express http request end return promise or call next on catch"
              }
            ]
          },
          "flags": {},
          "id": 2,
          "kind": 4096,
          "kindString": "Call signature",
          "name": "expressErrorHandler",
          "parameters": [
            {
              "flags": {},
              "id": 3,
              "kind": 32768,
              "kindString": "Parameter",
              "name": "_target",
              "type": {
                "name": "any",
                "type": "intrinsic"
              }
            },
            {
              "flags": {},
              "id": 4,
              "kind": 32768,
              "kindString": "Parameter",
              "name": "_key",
              "type": {
                "name": "string",
                "type": "intrinsic"
              }
            },
            {
              "flags": {},
              "id": 5,
              "kind": 32768,
              "kindString": "Parameter",
              "name": "descriptor",
              "type": {
                "name": "TypedPropertyDescriptor",
                "package": "typescript",
                "qualifiedName": "TypedPropertyDescriptor",
                "type": "reference",
                "typeArguments": [
                  {
                    "name": "any",
                    "type": "intrinsic"
                  }
                ]
              }
            }
          ],
          "type": {
            "name": "any",
            "type": "intrinsic"
          }
        }
      ],
      "sources": [
        {
          "character": 13,
          "fileName": "express/error-handler.ts",
          "line": 16,
          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/express/error-handler.ts#L16"
        }
      ]
    },
    {
      "flags": {},
      "id": 93,
      "kind": 64,
      "kindString": "Function",
      "name": "memoizeFactory",
      "signatures": [
        {
          "comment": {
            "blockTags": [
              {
                "content": [],
                "tag": "@returns"
              },
              {
                "content": [
                  {
                    "kind": "code",
                    "text": "```ts\nexport const sumTwoNumbersMemoize = memoizeFactory((a:number, b:number): number => a + b)\n\n// using\nsumTwoNumbersMemoize(5 + 10) // 15\n```"
                  }
                ],
                "tag": "@example"
              }
            ],
            "summary": [
              {
                "kind": "text",
                "text": "This is a simple implementation of memoize function that caches result against the parameter passed that are passed to the\nfunction so it never runs the same calculation twice."
              }
            ]
          },
          "flags": {},
          "id": 94,
          "kind": 4096,
          "kindString": "Call signature",
          "name": "memoizeFactory",
          "parameters": [
            {
              "flags": {},
              "id": 97,
              "kind": 32768,
              "kindString": "Parameter",
              "name": "factoryFn",
              "type": {
                "id": 95,
                "name": "F",
                "type": "reference"
              }
            }
          ],
          "type": {
            "id": 95,
            "name": "F",
            "type": "reference"
          },
          "typeParameter": [
            {
              "flags": {},
              "id": 95,
              "kind": 131072,
              "kindString": "Type parameter",
              "name": "F",
              "type": {
                "name": "AnyFunction",
                "type": "reference",
                "typeArguments": [
                  {
                    "id": 96,
                    "name": "R",
                    "type": "reference"
                  }
                ]
              }
            },
            {
              "flags": {},
              "id": 96,
              "kind": 131072,
              "kindString": "Type parameter",
              "name": "R"
            }
          ]
        }
      ],
      "sources": [
        {
          "character": 13,
          "fileName": "memoize-factory.ts",
          "line": 16,
          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/memoize-factory.ts#L16"
        }
      ]
    },
    {
      "flags": {},
      "id": 37,
      "kind": 64,
      "kindString": "Function",
      "name": "singletonPattern",
      "signatures": [
        {
          "comment": {
            "blockTags": [
              {
                "content": [
                  {
                    "kind": "text",
                    "text": "Function result that returns cached value."
                  }
                ],
                "tag": "@returns"
              },
              {
                "content": [
                  {
                    "kind": "code",
                    "text": "```ts\nexport class SomeClass {\n  constructor(protected _param: string){ }\n  get param(): string {\n    return this._param\n  }\n}\nexport const someClassSingleton = singletonPattern((): SomeClass => {\n  return new SomeClass('some param value')\n})\n\n// using\nconsole.log('param: ', someClassSingleton().param) // param: some param value\n\n///////////////////////////////////////////\n// Or we can use it with simple function //\n///////////////////////////////////////////\nexport const config = singletonPattern(() => {\n  return {\n    env: process.NODE_ENV,\n  } as const\n})\n\n// using\nconsole.log('NODE_ENV: ', config().env) // NODE_ENV: prod\n```"
                  }
                ],
                "tag": "@example"
              }
            ],
            "summary": [
              {
                "kind": "text",
                "text": "Singleton patter wrapper function"
              }
            ]
          },
          "flags": {},
          "id": 38,
          "kind": 4096,
          "kindString": "Call signature",
          "name": "singletonPattern",
          "parameters": [
            {
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Factory function that is used to generate value that is going to be cached and return by\nsingleton."
                  }
                ]
              },
              "flags": {},
              "id": 40,
              "kind": 32768,
              "kindString": "Parameter",
              "name": "factoryFn",
              "type": {
                "name": "AnyFunctionNoParams",
                "type": "reference",
                "typeArguments": [
                  {
                    "id": 39,
                    "name": "R",
                    "type": "reference"
                  }
                ]
              }
            }
          ],
          "type": {
            "name": "AnyFunctionNoParams",
            "type": "reference",
            "typeArguments": [
              {
                "id": 39,
                "name": "R",
                "type": "reference"
              }
            ]
          },
          "typeParameter": [
            {
              "flags": {},
              "id": 39,
              "kind": 131072,
              "kindString": "Type parameter",
              "name": "R"
            }
          ]
        }
      ],
      "sources": [
        {
          "character": 13,
          "fileName": "singleton/pattern.ts",
          "line": 34,
          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/singleton/pattern.ts#L34"
        }
      ]
    },
    {
      "flags": {},
      "id": 201,
      "kind": 64,
      "kindString": "Function",
      "name": "timeout",
      "signatures": [
        {
          "comment": {
            "blockTags": [
              {
                "content": [],
                "tag": "@returns"
              },
              {
                "content": [
                  {
                    "kind": "code",
                    "text": "```ts\nconst lightBlink = (): void => {\n  turnLightOn()\n  timeout(3000) // wait for 3 seconds\n  turnLightOff()\n  timeout(3000) // wait for 3 seconds\n  turnLightOn()\n}\n```"
                  }
                ],
                "tag": "@example"
              }
            ],
            "summary": []
          },
          "flags": {},
          "id": 202,
          "kind": 4096,
          "kindString": "Call signature",
          "name": "timeout",
          "parameters": [
            {
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The time, in milliseconds that the timer should wait before the specified function or code is executed. If this parameter is omitted, a value of 0 is used, meaning execute \"immediately\", or more accurately, the next event cycle."
                  }
                ]
              },
              "flags": {},
              "id": 203,
              "kind": 32768,
              "kindString": "Parameter",
              "name": "ms",
              "type": {
                "name": "number",
                "type": "intrinsic"
              }
            }
          ],
          "type": {
            "name": "Promise",
            "package": "typescript",
            "qualifiedName": "Promise",
            "type": "reference",
            "typeArguments": [
              {
                "name": "void",
                "type": "intrinsic"
              }
            ]
          }
        }
      ],
      "sources": [
        {
          "character": 13,
          "fileName": "timeout.ts",
          "line": 14,
          "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/timeout.ts#L14"
        }
      ]
    }
  ],
  "flags": {},
  "groups": [
    {
      "children": [
        167
      ],
      "title": "Enumerations"
    },
    {
      "children": [
        64,
        72,
        102,
        139,
        6,
        177
      ],
      "title": "Classes"
    },
    {
      "children": [
        56
      ],
      "title": "Interfaces"
    },
    {
      "children": [
        41,
        176,
        98,
        61
      ],
      "title": "Type Aliases"
    },
    {
      "children": [
        136,
        162,
        204
      ],
      "title": "Variables"
    },
    {
      "children": [
        49,
        1,
        93,
        37,
        201
      ],
      "title": "Functions"
    }
  ],
  "id": 0,
  "kind": 1,
  "kindString": "Project",
  "name": "@beecode/msh-util",
  "originalName": "",
  "sources": [
    {
      "character": 0,
      "fileName": "index.ts",
      "line": 1,
      "url": "https://github.com/beecode-rs/msh-util/blob/d220fbb/src/index.ts#L1"
    }
  ]
}
